spring:
  application:
    name: instruments-service

  # Database Configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/instruments
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: false

  # Flyway Migration
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true

  # Redis Configuration
  redis:
    host: localhost
    port: 6379
    database: 0
    timeout: 2000
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 2

  # Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
    consumer:
      group-id: instruments-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: com.backtest.instruments.events
    topics:
      instrument-events: instrument-events
      market-data-updates: market-data-updates
      dead-letter-topic: instruments-dlt

  # Cassandra Configuration
  data:
    cassandra:
      contact-points: localhost
      port: 9042
      keyspace: instruments
      schema-action: CREATE_IF_NOT_EXISTS
      local-datacenter: datacenter1
      request:
        timeout: 10s
      connection:
        connect-timeout: 10s
        init-query-timeout: 10s

# Server Configuration
server:
  port: 8080
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/plain
    min-response-size: 1024
  http2:
    enabled: true

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when_authorized
  metrics:
    export:
      prometheus:
        enabled: true

# Cache Configuration
cache:
  ttl:
    price-data: 60  # 1 minute in seconds
    instrument-metadata: 900  # 15 minutes in seconds
    reference-data: 3600  # 1 hour in seconds

# OpenAPI Documentation
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
  packages-to-scan: com.backtest.instruments.controller